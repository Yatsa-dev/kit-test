openapi: 3.0.0
paths:
  /auth/signup:
    post:
      operationId: AuthController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
      tags:
        - auth
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '401':
          description: Return `Unauthorized`
      tags:
        - auth
  /auth/refresh:
    post:
      operationId: AuthController_refreshToken
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '400':
          description: Return `Invalid refresh token, make sure the token is correct`
      tags:
        - auth
  /auth/logout:
    get:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: Return `Unauthorized`
      tags:
        - auth
      security:
        - bearer: []
  /users/me:
    get:
      operationId: UsersController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - users
      security:
        - bearer: []
  /project:
    post:
      operationId: ProjectController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - project
      security:
        - bearer: []
    get:
      operationId: ProjectController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - project
      security:
        - bearer: []
  /project/{id}:
    get:
      operationId: ProjectController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - project
      security:
        - bearer: []
    patch:
      operationId: ProjectController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDto'
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: Return `Unauthorized`
      tags:
        - project
      security:
        - bearer: []
    delete:
      operationId: ProjectController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: Return `Unauthorized`
      tags:
        - project
      security:
        - bearer: []
  /task:
    post:
      operationId: TaskController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '401':
          description: Return `Unauthorized`
        '404':
          description: Return `This project not found`
      tags:
        - task
      security:
        - bearer: []
  /task/{projectId}:
    get:
      operationId: TaskController_findAll
      parameters:
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: offset
          required: false
          in: query
          schema:
            type: number
        - name: sort
          required: false
          in: query
          schema:
            type: number
        - name: from
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: to
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            type: string
        - name: projectId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - task
      security:
        - bearer: []
  /task/single/{id}:
    get:
      operationId: TaskController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '401':
          description: Return `Unauthorized`
      tags:
        - task
      security:
        - bearer: []
  /task/{id}:
    patch:
      operationId: TaskController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDto'
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: Return `Unauthorized`
      tags:
        - task
      security:
        - bearer: []
    delete:
      operationId: TaskController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 'Return `{success: true}`'
        '401':
          description: Return `Unauthorized`
      tags:
        - task
      security:
        - bearer: []
info:
  title: Kit_test
  description: The Kit test API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
      required:
        - email
        - password
    LoginResponseDto:
      type: object
      properties:
        access_token:
          type: string
        expires_at:
          type: string
        refresh_token:
          type: string
      required:
        - access_token
        - expires_at
        - refresh_token
    LoginDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    UserDataResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        id:
          type: string
      required:
        - email
        - id
    CreateProjectDto:
      type: object
      properties:
        name:
          type: string
        userId:
          type: string
      required:
        - name
    ProjectResponse:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        userId:
          type: string
      required:
        - _id
        - name
        - userId
    UpdateProjectDto:
      type: object
      properties:
        name:
          type: string
        userId:
          type: string
    CreateTaskDto:
      type: object
      properties:
        name:
          type: string
        projectId:
          type: string
      required:
        - name
        - projectId
    TaskResponse:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        projectId:
          type: object
        status:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - _id
        - name
        - projectId
        - status
    UpdateTaskDto:
      type: object
      properties:
        status:
          type: string
      required:
        - status
